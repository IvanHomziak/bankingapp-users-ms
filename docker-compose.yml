version: '3.1'

services:
  mysqldb:
    container_name: mysqldb-users-c
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: users_db
      MYSQL_USER: clientuser
      MYSQL_PASSWORD: clientpassword
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: admin1234
    ports:
      - "3309:3306"
    networks:
      - users-ms-net
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d/ # path to script which should create database
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-padmin1234" ]
      interval: 30s
      timeout: 10s
      retries: 3

  users-ms-app:
    container_name: users-ms
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8086:8086"
    networks:
      - users-ms-net
      - bankingapp-network  # ðŸ”¹ Connect to global network
    depends_on:
      mysqldb:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:v2.46.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/tmp:/prometheus
      - ./prometheus/config:/etc/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=debug

  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/tmp:/var/lib/grafana
      - ./grafana/grafana.ini:/monitoring/grafana/grafana.ini

  alertmanager:
    image: prom/alertmanager:v0.25.0
    ports:
      - "9093:9093"
    volumes:
      - ./alert-manager/tmp:/data
      - ./alert-manager/config:/config
    command: --config.file=/config/alertmanager.yml --log.level=debug

networks:
  users-ms-net:
  bankingapp-network:
    driver: bridge  # Connect to global network