# Port number
server:
  port: ${SPRING_APPLICATION_PORT}

spring:
  profiles:
    active: dev
  application:
    name: ${SPRING_APPLICATION_NAME}
  app:
    jwtSecret: ${SPRING_APP_JWT_SECRET}
    jwtExpirationMs: ${SPRING_APP_JWT_EXPIRATION_MS}
  security:
    user:
      name: ${SPRING_SECURITY_USER_NAME}
      password: ${SPRING_SECURITY_USER_PASSWORD}
    # GitHub OAuth2 configuration
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
          # Google OAuth2 configuration
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  config:
    import: optional:configserver:${SPRING_CONFIG_SERVER_URL}
  devtools:
    restart:
      enabled: true
  data:
    rest:
      base-path: /api
  # Hibernate
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    show-sql: true
  # RabbitMQ
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
  # Reset Email Sender
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Eureka
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    register-with-eureka: true
    fetch-registry: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}

# FRONTEND
frontend:
  url: ${FRONTEND_URL}

### Prometheus, Health, Metrics
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      access: unrestricted
      show-details: always
    prometheus:
      access: unrestricted
    metrics:
      access: unrestricted
  prometheus:
    metrics:
      export:
        enabled: true

# Logging
logging:
  level:
    org:
      springframework: ERROR
      hibernate:
        SQL: DEBUG
        type.descriptor.sql.BasicBinder: TRACE
    com:
      numericaideas: DEBUG
      ihomziak.bankingapp.api.users.dao.AlbumsServiceClient: DEBUG
  file:
    name: users.ws.log